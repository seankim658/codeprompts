searchState.loadedDescShard("codeprompt", 0, "CodePrompt Crate\nModule for the codeprompt constants.\nFiles Module\nGit Module\nEasy import prelude module.\nSpinner Module\nTemplate Module\nTokenizer Module\nGets the basename of the filepath.\nParses a comma-delimited list from the user arguments.\nStarts at the directory root path and traverses the files …\nStruct to represent a parsed Github issue.\nThe github issue body.\nFetches a Github issue using the Github API.\nReturns the argument unchanged.\nExtracts the owner and repository name from a Git …\nGenerates a git diff in the repository.\nthe github issue raw HTML url.\nCalls <code>U::from(self)</code>.\nThe github issue number.\nThe github issue state.\nThe github issue title.\nSets up debug logging when verbose mode is enabled.\nCreates the progress indicator.\nRetrieve the template content and name based on the user …\nRenders the handlebars template.\nSets up the Handlebars template engine.\nReturns the byte pair encoder to use for tokenization.\nWarning for when a git diff option is used without a …\nWarning for when the git issue option is used without a …\nWarning for when token count is high.\nError when using git features without a git repository\nToken count threshold for warning.\nConfiguration options to validate.\nRepresents different types of validation warnings.\nFormats the warning message with appropriate styling.\nFormats the error message with appropriate styling.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstructor.\nPerforms the validation logic.\nValidates git repository presence when git features used.\nValidates token count and returns warning if above …")